# Generated by Django 2.2.6 on 2019-10-17 13:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blogger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blogger_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_category_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'IngredientCategories',
            },
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_name', models.CharField(max_length=80)),
                ('energy_content_Kcal', models.FloatField()),
                ('protein_content_g', models.FloatField()),
                ('carbohydrate_content_g', models.FloatField()),
                ('fat_content_g', models.FloatField()),
                ('fibre_content_g', models.FloatField()),
                ('alcohol_content_g', models.FloatField()),
                ('ingredient_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='madplan.IngredientCategory')),
            ],
            options={
                'verbose_name_plural': 'Ingredients',
            },
        ),
        migrations.CreateModel(
            name='Macronutrients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('macronutrient_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Macronutrients',
            },
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Measurements',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(max_length=80)),
                ('cuisine', models.CharField(max_length=30)),
                ('prep_time', models.IntegerField(null=True)),
                ('cook_time', models.IntegerField(null=True)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='madplan.Blogger')),
                ('course', models.ManyToManyField(to='madplan.Course')),
            ],
            options={
                'ordering': ['recipe_name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_headline', models.CharField(max_length=30)),
                ('recipe_description', models.TextField(verbose_name='Write here')),
            ],
            options={
                'verbose_name_plural': 'RecipeDescriptions',
            },
        ),
        migrations.CreateModel(
            name='Steps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField()),
                ('step_description', models.TextField(null=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='madplan.Recipe')),
            ],
            options={
                'verbose_name_plural': 'Steps',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='recipe_description',
            field=models.ManyToManyField(to='madplan.RecipeDescription'),
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_quantity', models.FloatField(null=True)),
                ('ingredient', models.ManyToManyField(to='madplan.Ingredients')),
                ('measurement', models.ManyToManyField(to='madplan.Measurements')),
                ('recipe', models.ManyToManyField(to='madplan.Recipe')),
            ],
            options={
                'verbose_name_plural': 'Quantities',
            },
        ),
    ]
